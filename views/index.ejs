<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/css/materialize.min.css">
  
  <title>Node File Uploads</title>

  <style>
    button#convert { 
      display:none
    }

    .display {
      display:block !important;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>File Upload</h1>
    <%= typeof msg != 'undefined' ? msg : '' %>
    <form action="/upload" method="POST" enctype="multipart/form-data">
      <div class="file-field input-field">
        <div class="btn grey">
          <span>File</span>
          <input name="myImage" type="file">
        </div>
        <div class="file-path-wrapper">
          <input class="file-path validate" type="text">
        </div>
      </div>
      <button type="submit" class="btn">Submit</button>
    </form>
    <br>
      <iframe src="<%= typeof file != 'undefined' ? file : '' %>" frameborder="0"></iframe>

      <button type="button" style="display: none;" id="convert">Convert</button>
      <!-- <img src="<%= typeof file != 'undefined' ? file : '' %>" class="responsive-img"> -->
  </div>

  <script src="https://unpkg.com/pdf-lib@1.4.0"></script>
  <script src="https://unpkg.com/downloadjs@1.4.7"></script>

  <script>
    const { degrees, PDFDocument, rgb, StandardFonts } = PDFLib

    document.querySelector("iframe").addEventListener( "load", function(e) {
      const btn = document.querySelector("#convert")
      const url = `${e.target.src}`

      btn.classList.toggle("display")

    btn.addEventListener( "click", async function() {
      const existingPdfBytes = await fetch(url).then(res => res.arrayBuffer())

      // Load a PDFDocument from the existing PDF bytes
      const pdfDoc = await PDFDocument.load(existingPdfBytes)

      // Embed the Helvetica font
      const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica)

      // Get the first page of the document
      const pages = pdfDoc.getPages()

      pages.forEach((page) => {

      // Draw a string of text diagonally across the first page
      page.drawText(`MOHON VIDEO UNBOXING \n` +
      `JIKA TIDAK ADA \n` +
      `KOMPLAIN TIDAK DITERIMA \n`, {
      x: 50,
      y: 65,
      size: 15,
      font: helveticaFont,
      color: rgb(0.95, 0.1, 0.1),
      })
      })


      // Serialize the PDFDocument to bytes (a Uint8Array)
      const pdfBytes = await pdfDoc.save()

      // Trigger the browser to download the PDF document
      download(pdfBytes, "pdf-lib_modification_example.pdf", "application/pdf");
      // console.log(pdfBytes)
    })

    } );
  </script>

  <script
  src="https://code.jquery.com/jquery-3.2.1.min.js"
  integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
  crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js"></script>  
</body>
</html>